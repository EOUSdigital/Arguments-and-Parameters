//TODO  ðŸ’» Challenge: "Dynamic Budget Tracker"

//  ðŸ§© Scenario:
//  We are tasked with creating a budgeting utility for a simple finance dashboard. This utility function will allow users to track expenses across various categories and provide summary messages based on input.

//? ðŸŽ¯ Function Requirements
//  ðŸ”¹ Function Name:           logExpenses

//? ðŸ”¹ Parameters:
//  1. name (string)
//  â€¢ Represents the name of the user.
//  â€¢ Use a default value (e.g., "Anonymous") if no name is passed.
//  2. ...categories (rest parameter)
//  â€¢ Accepts an unlimited number of category strings (e.g., "groceries", "transportation", "utilities").
//  â€¢ These represent the types of expenses being tracked.

//? ðŸ”¹ Inside the Function:
//  You must implement conditional logic that handles these use cases:
//  1. If no categories are passed:
//  â€¢ Log a message like: "Anonymous has no expense categories to review."
//  2. If only one category is passed:
//  â€¢ Log a message like: "Sam has 1 expense category: groceries."
//  3. If multiple categories are passed:
//  â€¢ Log a message like: "Jordan has 3 expense categories: groceries, transportation, entertainment."

//! Solution

function logExpenses(user = "Anonymous", ...categories) {
    console.log(`Function was called with ${arguments.length} arguments`);

    let warned = false;
    for (let i = 0; i < categories.length; i++) {
        if (typeof categories[i] !== 'string') {
            if (warned === false) {
                console.warn("Warning: All categories should be strings.");
                warned = true;
            }
        }
    }

    
    if (categories.length === 0) {
        return `${user} has no expense categories to review.`;
    }   else if (categories.length === 1) {
        return `${user} has 1 expense category: ${categories[0]}.`;
    }   else {
        return `${user} has ${categories.length} expense categories: ${categories.join(', ')}.`;
    }

}

//? Output

logExpenses();                                                  // Anonymous has no expense categories to review.
logExpenses("Taylor");                                          // Taylor has no expense categories to review.
logExpenses("Jordan", "groceries");                             // Jordan has 1 expense category: groceries.
logExpenses("Riley", "groceries", "rent", "utilities");         // Riley has 3 expense categories: groceries, rent, utilities.


------------------------------------------------------------------------------------------------------






















